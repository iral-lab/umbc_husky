<?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      gazebo_description.launch
\authors   Paul Bovbel <pbovbel@clearpathrobotics.com
\copyright Copyright (c) 2015, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<launch>

  <arg name="multimaster" default="$(optenv ROBOT_MULTIMASTER false)"/>
  <arg name="simulation" default="$(optenv ROBOT_SIMULATION false)"/>
  <arg name="robot_namespace" default="$(optenv ROBOT_NAMESPACE robot)"/>

  <arg name="config_extras"
       default="$(eval optenv('HUSKY_CONFIG_EXTRAS', find('husky_control') + '/config/empty.yaml'))"/>

  <arg name="arm_enabled" default="true"/>
  <arg name="kinova_robotType" default="j2n6s300"/>
  <arg name="urdf_extras" default="$(optenv HUSKY_URDF_EXTRAS)"/>

  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <!-- Load robot description -->
  <!-- <include file="$(find umbc_husky)/launch/description.launch" >
    <arg name="arm_enabled" default="$(arg arm_enabled)"/>
    <arg name="urdf_extras" default="$(arg urdf_extras)"/>
  </include>  -->
  
  <param name="robot_description" command="cat $(find umbc_husky)/urdf/umbc_husky_full.urdf" />




  <!-- Load controller configuration for husky -->
  <rosparam command="load" file="$(find husky_control)/config/control.yaml" />
  <node name="base_controller_spawner" pkg="controller_manager" type="spawner" ns="/"
        args="husky_joint_publisher
              husky_velocity_controller"/>

  <!-- Load controllers for arm (trajectory controllers)-->
  <rosparam command="load" file="$(find umbc_husky)/config/$(arg kinova_robotType)_control.yaml" />
  <node name="$(arg kinova_robotType)_trajectory_controller" pkg="controller_manager" type="spawner" 
        args="/j2n6s300/effort_finger_trajectory_controller
              /j2n6s300/effort_joint_trajectory_controller   
              /j2n6s300/finger_tip_1_position_controller
              /j2n6s300/finger_tip_2_position_controller 
              /j2n6s300/finger_tip_3_position_controller
              /j2n6s300/joint_state_controller"/>

  <!-- Spawn robot in gazebo '' -->
  <node name="spawn_husky_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x)
              -y $(arg y)
              -z $(arg z)
              -Y $(arg yaw)
              -unpause
              -urdf
              -param robot_description
              -model $(arg robot_namespace)
              -J $(arg kinova_robotType)_joint_1 0.0
              -J $(arg kinova_robotType)_joint_2 2.9
              -J $(arg kinova_robotType)_joint_3 1.3
              -J $(arg kinova_robotType)_joint_4 -2.07
              -J $(arg kinova_robotType)_joint_5 1.4
              -J $(arg kinova_robotType)_joint_6 0.0
              -J $(arg kinova_robotType)_joint_finger_1 1.0
              -J $(arg kinova_robotType)_joint_finger_2 1.0
              -J $(arg kinova_robotType)_joint_finger_3 1.0" />

  <!-- Start EKF for localization -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
    <rosparam command="load" file="$(find husky_control)/config/localization.yaml" />
  </node>

  <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find husky_control)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="husky_velocity_controller/cmd_vel"/>
  </node>
 
  <node name="command_robot_home_pose" pkg="kinova_control" type="move_robot.py"
        respawn="false" output="screen" args="$(arg kinova_robotType)">       
  </node>

  <!-- Override the default control parameters, see config/empty.yaml for default. -->
  <rosparam command="load" file="$(arg config_extras)" />

</launch>
