<?xml version="1.0"?>
<launch>

  <arg name="multimaster" default="$(optenv ROBOT_MULTIMASTER false)"/>
  <arg name="simulation" default="$(optenv ROBOT_SIMULATION false)"/>
  <arg name="robot_namespace" default="$(optenv ROBOT_NAMESPACE robot)"/>

  <arg name="config_extras"
       default="$(eval optenv('HUSKY_CONFIG_EXTRAS', find('husky_control') + '/config/empty.yaml'))"/>

  <arg name="arm_enabled" default="true"/>
  <arg name="kinova_robotType" default="j2n6s300"/>
  <arg name="urdf_extras" default="$(optenv HUSKY_URDF_EXTRAS)"/>

  <include file="$(find multimaster_launch)/launch/multimaster_robot.launch" if="$(arg multimaster)">
    <arg name="gazebo_interface" value="$(find husky_control)/config/gazebo_interface.yaml" />
    <arg name="public_interface" value="$(find husky_control)/config/public_interface.yaml" />
    <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    <arg name="simulation" value="$(arg simulation)"/>
  </include>

  <!-- Load robot description -->
  <include file="$(find umbc_husky)/launch/description.launch" >
    <arg name="arm_enabled" default="$(arg arm_enabled)"/>
    <arg name="urdf_extras" default="$(arg urdf_extras)"/>
  </include>


  <!-- Load controllers for arm (trajectory controllers)-->
  <!--   <rosparam command="load" file="$(find kinova_control)/config/$(arg kinova_robotType)_control.yaml" />
  <node name="$(arg kinova_robotType)_trajectory_controller" pkg="controller_manager" type="spawner" ns="$(arg kinova_robotType)"
        args="effort_joint_trajectory_controller
              effort_finger_trajectory_controller    
              finger_tip_1_position_controller
              finger_tip_2_position_controller 
              finger_tip_3_position_controller
              joint_state_controller"/>-->

  <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
        args="husky_joint_publisher
              husky_velocity_controller"/> 

  <!-- Load controller configuration -->
  <rosparam command="load" file="$(find husky_control)/config/control.yaml" />
  <!-- <rosparam command="load" file="$(find umbc_husky)/config/$(arg kinova_robotType)_control.yaml" /> -->


  <!-- Start EKF for localization -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
    <rosparam command="load" file="$(find husky_control)/config/localization.yaml" />
  </node>

  <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find husky_control)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="husky_velocity_controller/cmd_vel"/>
  </node>
  
  <!-- <node name="command_robot_home_pose" pkg="kinova_control" type="move_robot.py"
        respawn="false" output="screen" args="$(arg kinova_robotType)">       
  </node> -->

  <!-- Override the default control parameters, see config/empty.yaml for default. -->
  <rosparam command="load" file="$(arg config_extras)" />

</launch>
